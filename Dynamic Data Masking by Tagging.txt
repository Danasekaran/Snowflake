---------------- CREATE TAG --------------------------------------------
CREATE OR REPLACE TAG DEV_DB_SALES.SCH_SALES_RAW.TAG_SECURE_LEVEL;


----------------CREATE USER AND ROLE--------------------------------------------
CREATE OR REPLACE USER USR_SECURED_ACCESS PASSWORD='Password!1' MUST_CHANGE_PASSWORD =FALSE;
CREATE OR REPLACE ROLE RL_SECURED_ACCESS TAG (DEV_DB_SALES.SCH_SALES_RAW.TAG_SECURE_LEVEL='PII');
GRANT USAGE ON WAREHOUSE  COMPUTE_WH TO ROLE RL_SECURED_ACCESS;
GRANT ROLE RL_SECURED_ACCESS TO USER USR_SECURED_ACCESS;
GRANT USAGE ON DATABASE DEV_DB_SALES TO ROLE RL_SECURED_ACCESS;
GRANT USAGE ON SCHEMA DEV_DB_SALES.SCH_SALES_RAW TO ROLE RL_SECURED_ACCESS;
GRANT ALL ON ALL TABLES IN SCHEMA DEV_DB_SALES.SCH_SALES_RAW TO ROLE RL_SECURED_ACCESS;

CREATE OR REPLACE USER USR_DATA_OWNER PASSWORD='Password!1' MUST_CHANGE_PASSWORD =FALSE;
CREATE OR REPLACE ROLE RL_FULL_ACCESS TAG (DEV_DB_SALES.SCH_SALES_RAW.TAG_SECURE_LEVEL='FULL_ACCESS');
GRANT USAGE ON WAREHOUSE  COMPUTE_WH TO ROLE RL_FULL_ACCESS;
GRANT ROLE RL_FULL_ACCESS TO USER USR_DATA_OWNER;
GRANT USAGE ON DATABASE DEV_DB_SALES TO ROLE RL_FULL_ACCESS;
GRANT USAGE ON SCHEMA DEV_DB_SALES.SCH_SALES_RAW TO ROLE RL_FULL_ACCESS;
GRANT ALL ON ALL TABLES IN SCHEMA DEV_DB_SALES.SCH_SALES_RAW TO ROLE RL_FULL_ACCESS;

------------------- CREATE MASKING POLICY ------------------------------------
CREATE or REPLACE MASKING POLICY DEV_DB_SALES.SCH_SALES_RAW.MASKING_POLICY_PII as (val string) RETURNS STRING
 ->
  CASE
    when SYSTEM$GET_TAG( 'DEV_DB_SALES.SCH_SALES_RAW.TAG_SECURE_LEVEL' , CURRENT_ROLE() , 'ROLE' )='FULL_ACCESS' then val
    when SYSTEM$GET_TAG( 'DEV_DB_SALES.SCH_SALES_RAW.TAG_SECURE_LEVEL' , CURRENT_ROLE() , 'ROLE' )='PII' then '*********'
    
    -- WHEN SYSTEM$GET_TAG_ON_CURRENT_COLUMN('DEV_DB_SALES.SCH_SALES_RAW.TAG_SECURE_LEVEL') = 'PII' THEN '*********'
    ELSE '****No Access****'
  END;

------------------- ASSIGN MASKING PLOICY TO COLUMNS ----------------------------------------
ALTER TABLE DEV_DB_SALES.SCH_SALES_RAW.TBL_EMPLOYEE MODIFY COLUMN EMAIL SET TAG DEV_DB_SALES.SCH_SALES_RAW.TAG_SECURE_LEVEL='PII';
ALTER TABLE DEV_DB_SALES.SCH_SALES_RAW.TBL_CUSTOMER MODIFY COLUMN EMAIL SET TAG DEV_DB_SALES.SCH_SALES_RAW.TAG_SECURE_LEVEL='PII';

------------------- ASSIGN MASKING PLOICY TO TAG ----------------------------------------
ALTER TAG DEV_DB_SALES.SCH_SALES_RAW.TAG_SECURE_LEVEL SET MASKING POLICY DEV_DB_SALES.SCH_SALES_RAW.MASKING_POLICY_PII;


------------------- VERIFY TAG ----------------------------------------

SELECT * FROM TABLE( INFORMATION_SCHEMA.TAG_REFERENCES_ALL_COLUMNS('DEV_DB_SALES.SCH_SALES_RAW.TBL_EMPLOYEE','table'));
SELECT * FROM SNOWFLAKE.ACCOUNT_USAGE.TAGS ORDER BY TAG_NAME;

select SYSTEM$GET_TAG( 'DEV_DB_SALES.SCH_SALES_RAW.TAG_SECURE_LEVEL' , 'RL_FULL_ACCESS' , 'ROLE' )
  
USR_SECURED_ACCESS
USR_DATA_OWNER